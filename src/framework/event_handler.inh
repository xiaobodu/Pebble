/*
 * Tencent is pleased to support the open source community by making Pebble available.
 * Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 *
 */


#ifndef  _PEBBLE_EXTENSION_EVENT_HANDLER_H_
#define  _PEBBLE_EXTENSION_EVENT_HANDLER_H_

#include <string>

#include "framework/processor.h"


namespace pebble {

class StatManager;

class RpcEventHandler : public IEventHandler {
public:
    RpcEventHandler() : m_stat_manager(NULL) {}
    virtual ~RpcEventHandler() {}

    int32_t Init(StatManager* stat_manager) {
        m_stat_manager = stat_manager;
        return 0;
    }

    virtual void ReportTransportQuality(int64_t handle, int32_t ret_code,
        int64_t time_cost_ms);

    virtual void RequestProcComplete(const std::string& name,
        int32_t result, int32_t time_cost_ms);

    virtual void ResponseProcComplete(const std::string& name,
        int32_t result, int32_t time_cost_ms);

private:
    StatManager* m_stat_manager;
};

class BroadcastEventHandler : public IEventHandler {
public:
    BroadcastEventHandler() : m_stat_manager(NULL) {}
    virtual ~BroadcastEventHandler() {}

    int32_t Init(StatManager* stat_manager) {
        m_stat_manager = stat_manager;
        return 0;
    }

    virtual void ReportTransportQuality(int64_t handle, int32_t ret_code,
        int64_t time_cost_ms) {}

    virtual void RequestProcComplete(const std::string& name,
        int32_t result, int32_t time_cost_ms);

    virtual void ResponseProcComplete(const std::string& name,
        int32_t result, int32_t time_cost_ms) {}

private:
    StatManager* m_stat_manager;
};

}  // namespace pebble
#endif   //  _PEBBLE_EXTENSION_EVENT_HANDLER_H_
